#!/bin/sh

echo 'RTAX: Rapid and accurate taxonomic classification of short paired-end'
echo '      sequence reads from the 16S ribosomal RNA gene.'
echo ''
echo 'David A. W. Soergel (1) and Rob Knight (2)'
echo ''
echo '1 Department of Plant and Microbial Biology,'
echo '  University of California, Berkeley '
echo '2 Howard Hughes Medical Institute and Department of Chemistry '
echo '  and Biochemistry, University of Colorado at Boulder'
echo '* Corresponding author (current address): soergel@cs.umass.edu'
echo ''
echo 'Version 0.9  (September 17, 2011)'
echo ''
echo 'http://dev.davidsoergel.com/rtax'
echo ''



# we want to call subsidiary scripts in the "scripts" subdir, but we don't know where we're installed or what the working directory is.
# solution from http://hintsforums.macworld.com/archive/index.php/t-73839.html

IFS=$' \t\n'
declare -x PATH=/bin:/usr/bin
arg=$0; [[ -L $0 ]] && arg=$(stat -f '%Y' "$0")
pth=$(2>/dev/null cd "${arg%/*}" >&2; echo "`pwd -P`/${arg##*/}")
par=$(dirname "$pth")
scripts="$par/scripts"

if [[ ( $# -ne 3 ) && ( $# -ne 4 ) ]]
then
  echo "Usage: `basename $0` reference.fasta reference.taxonomy queryA.fasta [queryB.fasta] > classifications.out"
  exit 1
fi

# Grab the command-line arguments

refdb=$1
taxonomy=$2
queryA=$3
queryB=$4

# find USEARCH, or hardcode if needed (could use an environment variable...)
# usearch=/path/to/usearch
usearch=`which usearch`
if [[ ($# -eq 0) ]]
then
    echo "usearch not found in path.  Please correct, or just hardcode the path in the rtax script."
    exit 1
fi
echo using usearch: $usearch
echo

# create a temporary working directory

tempdir=/tmp/rtax.$RANDOM
mkdir $tempdir
cd $tempdir

# perform the search

if [ $queryB ]; then
    $scripts/rtaxSearchPair.pl --database $refdb --queryA $queryA --queryB $queryB --usearch $usearch > rawhits
else
    $scripts/rtaxSearchSingle.pl --database $refdb --queryA $queryA  --usearch $usearch > rawhits
fi


# choose the "best" taxonomy assignment by walking down the tree, including info on how many ref sequences agree at each level
# and pipe directly into the cleanup scripts instead of using temp files

$scripts/rtaxVote.pl $taxonomy rawhits | $scripts/classificationQualityFilter.pl 1 0.0 0.5 | $scripts/classificationQualityStripper.pl

# The output of this process includes the pcid-width column and a tab-delimited tax string

# filter the taxonomy strings to the finest rank where half of the hits agree (out of all the hits, i.e. including in the denominator those hits with no annotation)
#$scripts/classificationQualityFilter.pl 1 0.0 0.5 < rawtaxonomy > filteredtaxonomy

# clean up the resulting output and provide it to STDOUT
#$scripts/classificationQualityStripper.pl < filteredtaxonomy 

# remove the temp directory
# (comment out to debug or grab intermediate results)

rm -rf $tempdir